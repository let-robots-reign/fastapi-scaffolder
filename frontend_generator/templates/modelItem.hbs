<template>
  <a-layout class="main-layout table-layout">
    <base-section with-padding>
      <a-row type="flex" justify="center">
        <a-col :xs="20">
          <div v-if="formMode !== 'create'" class="heading-box">
            <h1 class="heading">
              Элемент {{modelName}} #\{{ itemId }}
            </h1>
            <base-button
              class="button"
              size="large"
              danger
              @click="confirmModalOpened = true"
            >
              Удалить элемент
            </base-button>
          </div>
          <h1 class="heading heading-create" v-else>Создание элемента {{modelName}}</h1>
        </a-col>
        <a-col :xs="20">
          <a-form
            :model="itemData"
            name="form"
            ref="form"
            layout="vertical"
          >
            {{#each fields}}
              <a-form-item
                {{#if disabled}}
                v-if="formMode !== 'create'"
                {{/if}}
                label="{{{label}}}"
                name="{{model}}"
                :rules="rules['{{model}}']"
              >
                <a-{{type}}
                  v-model:value="itemData['{{model}}']"
                  {{#if placeholder}}
                  placeholder="{{{placeholder}}}"
                  {{/if}}
                  {{#if disabled}}
                  disabled
                  {{/if}}
                  {{#if options}}
                  :options="getOptions({{{stringArray options}}})"
                  {{/if}}
                />
              </a-form-item>
            {{/each}}
          </a-form>
        </a-col>
        <a-col :xs="20">
          <base-button
            class="button"
            size="large"
            :style="{ marginRight: '16px' }"
            @click="submit"
          >
            Сохранить
          </base-button>
          <base-button
            class="button"
            type="secondary"
            size="large"
            @click="cancelClicked"
          >
            Отменить
          </base-button>
        </a-col>
      </a-row>
    </base-section>
  </a-layout>
  <base-modal
    :visible="confirmModalOpened"
    @close="closeConfirmModal"
  >
    <template #header>
      <h2 class="modal-heading">Подтвердите действие</h2>
    </template>
    <div class="modal-body">
      <p class="confirm-text">
        Действительно удалить элемент
      </p>
      <div class="modal-buttons">
        <base-button size="large" @click="confirmDelete">
          ДА
        </base-button>
        <base-button size="large" type="secondary" @click="closeConfirmModal">
          НЕТ
        </base-button>
      </div>
    </div>
  </base-modal>
</template>

<script lang="ts">
import { Component } from "vue-facing-decorator";
import BaseSection from "@/components/BaseSection.vue";
import BaseButton from "@/components/BaseButton.vue";
import BaseModelItem from "@/components/BaseModelItem.vue";
import BaseModal from "@/components/BaseModal.vue";

// TODO: types, multiple selection in a-select, create form component

@Component({
  components: { BaseButton, BaseSection, BaseModal }
})
export default class {{capitalize modelName}}Item extends BaseModelItem {
  modelName = "{{capitalize modelName}}";

  rules = {
    {{#each fields}}
    {{#if (or required (eq type "input"))}}
    {{model}}: [
      {
        {{#if required}}
        required: true,
        message: "Field \"{{{label}}}\" is required",
        {{/if}}
        {{#if (eq type "input")}}
        type: "{{inputType}}"
        {{/if}}
      },
    ],
    {{/if}}
    {{/each}}
  };

  async getItem() {
    try {
      // const itemRes = await api.admin.getOne(this.modelName, this.itemId);
      // this.itemData = itemRes.data;

      // this.itemData = {
      //   id: 1,
      //   name: "John Doe",
      //   skills: ["Javascript", "VueJS"],
      //   email: "john.doe@gmail.com",
      //   status: true
      // };

      this.itemData = {
        id: 1,
        name: "Sherlock",
        surname: "Holmes",
        age: "35",
        email: "sherlock@ed.com",
        address: "Baker St., 221B"
      };
    } catch (e) {
      console.log(e);
    }
  }

  submit() {
    console.log("Submit!");
    this.router.back();
  }

  confirmDelete() {
    console.log("Delete item!");
    this.closeConfirmModal();
    this.router.back();
  }

  processError() {
    console.log("Error!");
  }

  async created() {
    if (this.formMode !== "create") {
      await this.getItem();
    }
  }
}
</script>

<style lang="scss" scoped>
.heading-box {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.heading {
  margin: 0;
}

.heading-create {
  margin: 0 0 32px 0;
}

.modal-heading {
  margin: 0;
  font-size: 32px;
  font-family: "Roboto", sans-serif;
  font-weight: 600;
}

.confirm-text {
  font-size: 18px;
  font-family: "Roboto", sans-serif;
  margin-bottom: 32px;
}

.modal-buttons {
  display: flex;
  justify-content: end;
  column-gap: 12px;
}
</style>
