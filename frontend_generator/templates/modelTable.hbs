<template>
  <a-layout class="main-layout table-layout">
    <base-section with-padding>
      <a-row
        type="flex"
        justify="space-between"
        align="middle"
        :style="{ marginBottom: '40px' }"
      >
        <a-col :xs="13" :offset="2">
          <h1 class="heading">Список элементов модели {{modelName}}</h1>
        </a-col>
        <a-col :xs="4" :style="{ textAlign: 'right' }">
          <base-button
            v-show="selectedRows.length > 0"
            size="large"
            danger
            @click="confirmModalOpened = true"
          >
            Удалить элементы
          </base-button>
        </a-col>
        <a-col :xs="4">
          <base-button size="large" @click="createNewItem">Создать элемент</base-button>
        </a-col>
      </a-row>
      <a-row type="flex" justify="center">
        <a-col :xs="20">
          <base-table
            :data="data"
            :columns="columns"
            :total="total"
            :selected-rows="selectedRows"
            @row-checked-change="toggleSelectRow"
          >
            <template #id="{ item }">
              <router-link
                :to="{ name: '{{modelName}} Item', params: { id: item.id } }"
              >
                \{{ item.id }}
              </router-link>
            </template>
          </base-table>
        </a-col>
      </a-row>
    </base-section>
  </a-layout>
  <base-modal
    :visible="confirmModalOpened"
    @close="closeConfirmModal"
  >
    <template #header>
      <h2 class="modal-heading">Подтвердите действие</h2>
    </template>
    <div class="modal-body">
      <p class="confirm-text">
        Действительно удалить \{{ selectedRows.length }} элементов
      </p>
      <div class="modal-buttons">
        <base-button size="large" @click="confirmDelete">
          ДА
        </base-button>
        <base-button size="large" type="secondary" @click="closeConfirmModal">
          НЕТ
        </base-button>
      </div>
    </div>
  </base-modal>
</template>

<script lang="ts">
import { Component } from "vue-facing-decorator";
import BaseTable from "@/components/BaseTable.vue";
import BaseSection from "@/components/BaseSection.vue";
import BaseButton from "@/components/BaseButton.vue";
import BaseModal from "@/components/BaseModal.vue";
import BaseModelTable from "@/components/BaseModelTable.vue";
// import api from "@/api/api";

@Component({
  components: { BaseButton, BaseSection, BaseTable, BaseModal }
})
export default class {{capitalize modelName}}Table extends BaseModelTable {
  modelName = "{{capitalize modelName}}";

  async getDataList() {
    try {
      // const res = await api.admin.list(this.modelName);
      // this.data = res.data;

      // this.data = [
      //   {
      //     id: 1,
      //     name: "Roach",
      //     animal: "Horse",
      //     age: 8,
      //     color: "black",
      //     doctor: "Mr. Smith",
      //     owner: "Mr. Green",
      //   },
      //   {
      //     id: 2,
      //     name: "Jack",
      //     animal: "Dog",
      //     age: 8,
      //     color: "brown",
      //     doctor: "Mrs. Finch",
      //     owner: "Mr. Tyler",
      //   },
      // ];

      this.data = [
        {
          id: 1,
          name: "Sherlock",
          surname: "Holmes",
          age: 35,
          email: "sherlock@ed.com",
          address: "Baker St., 221B"
        },
        {
          id: 2,
          name: "Harry",
          surname: "Potter",
          age: 11,
          email: "harry@hg.tz",
          address: "Privet Drive, 4"
        },
        {
          id: 3,
          name: "John",
          surname: "Smith",
          age: 90,
          email: "john@who.com",
          address: "Tardis"
        },
        {
          id: 4,
          name: "Ben",
          surname: "Larson",
          age: 24,
          email: "bsheep@gmail.com",
          address: "Quebec, Canada"
        },
        {
          id: 5,
          name: "Peter",
          surname: "Parker",
          age: 17,
          email: "p.parker@gmail.com",
          address: "Queens, NYC",
        },
        {
          id: 6,
          name: "Bartholomew",
          surname: "Monroe",
          age: 29,
          email: "guitarplayer_hit1995@gmail.com",
          address: "Jacksonville, Florida, US"
        },
        {
          id: 7,
          name: "Barney",
          surname: "Stinson",
          age: 31,
          email: "suit@up.com",
          address: "Manhattan, NYC"
        },
        {
          id: 8,
          name: "Emily",
          surname: "Green",
          age: 45,
          email: "lawconsult@yahoo.com",
          address: "844 Benson Park Drive, Oklahoma"
        },
        {
          id: 9,
          name: "Sarah",
          surname: "Walker",
          age: 36,
          email: "walkwithme@gmail.com",
          address: "4450 Fincham Road, Palm Springs"
        },
        {
          id: 10,
          name: "Regina",
          surname: "Thomas",
          age: 34,
          email: "regFLmas@gmail.com",
          address: "170 Drainer Avenue, Chipley, FL"
        },
      ];
      this.total = this.data.length * 10;
      this.columns = this.getColumnsFromData();
    } catch (e) {
      console.log(`Error getting list of ${this.modelName}:`, e);
    }
  }

  createNewItem() {
    this.router.push({ name: "Create {{modelName}} Item" });
  }

  created() {
    this.getDataList();
  }

  confirmDelete() {
    // TODO: delete many
    this.selectedRows.splice(0);
    this.closeConfirmModal();
  }
}
</script>

<style lang="scss" scoped>
.table-layout {
  padding-top: 50px;
}

.heading {
  margin: 0;
}

.modal-heading {
  margin: 0;
  font-size: 32px;
  font-family: "Roboto", sans-serif;
  font-weight: 600;
}

.confirm-text {
  font-size: 18px;
  font-family: "Roboto", sans-serif;
  margin-bottom: 32px;
}

.modal-buttons {
  display: flex;
  justify-content: end;
  column-gap: 12px;
}
</style>