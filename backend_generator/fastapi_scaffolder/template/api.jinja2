from __future__ import annotations

from fastapi import FastAPI, Request, Depends

{{ imports }}

from dependencies import global_get_session
from controllers import *

from fields import get_model_fields

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
    {% set info_value = value.__repr__() %}
    {{ key }} = {{ info_value }},
    {% endfor %}
    {% endif %}
    dependencies=[Depends(global_get_session)]
)

{% if models %}
@app.get("/models/list")
async def get_models_list() -> dict:
    models = {{ models }}
    return {
        "models": {model_name: {"fields": get_model_fields("models", model_name)} for model_name in models}
    }
{% endif %}

{% for operation in operations %}
@app.{{ operation.type }}('{{ operation.snake_case_path }}', response_model={{ operation.response }}
    {% if operation.additional_responses %}
        , responses={
            {% for status_code, models in operation.additional_responses.items() %}
                '{{ status_code }}': {
                {% for key, model in models.items() %}
                    '{{ key }}': {{ model }}{% if not loop.last %},{% endif %}
                {% endfor %}
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    {% endif %}
    {% if operation.tags %}
    , tags={{ operation.tags }}
    {% endif %})
async def {{ operation.function_name }}(request: Request, {{ operation.snake_case_arguments }}) -> {{ operation.return_type }}:
    {%- if operation.summary %}
    """
    {{ operation.summary }}
    """
    {%- endif %}
    {% set controller_name = get_controller_name(operation) %}
    {% set controller_arguments = get_controller_arguments(operation) %}
    {% set method_name = get_method_name(operation) %}
    {% if controller_name %}
    return await {{ controller_name }}.{{ method_name }}({{ controller_arguments }})
    {% else %}
    # Couldn't derive controller name, check your OpenAPI file
    # Add "operationId" or "tags" fields to the YML file if not present
    {% endif %}
{% endfor %}
