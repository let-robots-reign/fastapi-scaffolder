from __future__ import annotations

from fastapi import FastAPI

{{ imports }}

from .controllers import *

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
    {% set info_value = value.__repr__() %}
    {{ key }} = {{ info_value }},
    {% endfor %}
    {% endif %}
    )

session = None # TODO: get session for queries


{% for operation in operations %}
@app.{{ operation.type }}('{{ operation.snake_case_path }}', response_model={{ operation.response }}
    {% if operation.additional_responses %}
        , responses={
            {% for status_code, models in operation.additional_responses.items() %}
                '{{ status_code }}': {
                {% for key, model in models.items() %}
                    '{{ key }}': {{ model }}{% if not loop.last %},{% endif %}
                {% endfor %}
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    {% endif %}
    {% if operation.tags %}
    , tags={{ operation.tags }}
    {% endif %})
async def {{ operation.function_name }}({{ operation.snake_case_arguments }}) -> {{ operation.return_type }}:
    {%- if operation.summary %}
    """
    {{ operation.summary }}
    """
    {%- endif %}
    {% set controller_name = get_controller_name(operation) %}
    {% set controller_arguments = get_controller_arguments(operation) %}
    {% set method_name = get_method_name(operation) %}
    return await {{ controller_name }}.{{ method_name }}({{ controller_arguments }})
{% endfor %}
